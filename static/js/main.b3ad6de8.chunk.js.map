{"version":3,"sources":["components/EmployerComponent.js","components/WorkerComponent.js","components/HomeComponent.js","components/Header.js","redux/ActionTypes.js","shared/baseUrl.js","redux/ActionCreators.js","components/MainComponent.js","redux/forms.js","redux/contractors.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["maxLength","len","val","length","CommentForm","props","handleSubmit","bind","values","this","addForm","name","telnum","price","description","console","log","JSON","stringify","resetFeedbackForm","model","onSubmit","className","htmlFor","text","id","placeholder","validators","minLength","show","messages","textarea","rows","type","color","Component","Employer","useState","job","setJob","jobs","setJobs","jobInfo","setJobInfo","region","setRegion","regions","setRegions","regionInfo","setRegionInfo","useEffect","states","dbdata","map","state","stateName","value","stateID","reg","find","jb","stateData","jobID","Designation","onRegionChange","event","a","target","onJobChange","FormControl","InputLabel","Select","onChange","MenuItem","parseFloat","minWage","toFixed","RenderContractor","item","Worker","contractors","contractor","in","Home","margin","to","Header","isNavOpen","isModalOpen","toggleNav","toggleModal","handleLogin","setState","alert","username","password","remember","checked","preventDefault","Fragment","dark","expand","onClick","isOpen","navbar","toggle","innerRef","input","check","ADD_CONTRACTORS","CONTRACTORS_LOADING","CONTRACTORS_FAILED","baseUrl","fetchContractors","dispatch","fetch","then","response","ok","error","Error","status","statusText","message","json","ActionTypes","payload","addcontractors","catch","errmess","Main","TransitionGroup","CSSTransition","classNames","timeout","path","component","exact","isLoading","location","key","withRouter","connect","actions","reset","Id","newFeedback","date","Date","toISOString","method","body","headers","credentials","InitialFeedback","Contractors","errMess","action","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3ad6de8.chunk.js","sourcesContent":["import React, { Component, useState, useEffect, Fragment } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport {\r\n    Card, CardImg, CardText, CardBody, Row, Col,\r\n    ModalBody, Modal, ModalHeader, CardTitle, Breadcrumb, BreadcrumbItem, Button, Label\r\n} from 'reactstrap';\r\nimport { \r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n} from '@material-ui/core';\r\n\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\nimport dbdata from './data';\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len)\r\nconst minLength = (len) => (val) => (val) && (val.length >= len)\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        this.props.addForm( values.name, values.telnum, values.price, values.description);\r\n        console.log(\"Current state is : \"+JSON.stringify(values));\r\n        this.props.resetFeedbackForm()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n\r\n\r\n\r\n                    <Col className=\"form-group\">\r\n                        <Label htmlFor=\"name\" >Your Name</Label>\r\n                        <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                            placeholder=\"Your Name\"\r\n                            className=\"form-control\"\r\n                            validators={{\r\n                                minLength: minLength(3), maxLength: maxLength(15)\r\n                            }}\r\n                        />\r\n                        <Errors className=\"text-danger\"\r\n                            model=\".name\"\r\n                            show=\"touched\"\r\n                            messages={{\r\n                                minLength: 'Must be greater than 2 characters',\r\n                                maxLength: 'Must be 15 characters or less'\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                    <Col className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\">Tel. no</Label>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. no\"\r\n                                        className=\"form-control\"\r\n                                         />\r\n                            </Col>\r\n                            <Col className=\"form-group\">\r\n                                <Label htmlFor=\"price\">Price per Month</Label>\r\n                                    <Control.text model=\".price\" id=\"price\" name=\"price\"\r\n                                        placeholder=\"Price\"\r\n                                        className=\"form-control\"\r\n                                         />\r\n                            </Col>\r\n\r\n                    \r\n                    <Col className=\"form-group\">\r\n                        <Label htmlFor=\"description\" >Description</Label>\r\n                        <Control.textarea model=\".description\" id=\"description\" name=\"description\"\r\n                         placeholder=\"Enter Job Designation and State\"\r\n                            rows=\"6\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    </Col>\r\n                    <Col className=\"form-group\">\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Submit\r\n                                    </Button>\r\n                    </Col>\r\n                </Form>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction Employer(props) {\r\n    const [job, setJob] = useState('');\r\n    const [jobs, setJobs] = useState([]);\r\n    const [jobInfo, setJobInfo] = useState({});\r\n    const [region, setRegion] = useState('KA');\r\n    \r\n\r\n    const [regions, setRegions]=useState([]);\r\n    const [regionInfo, setRegionInfo]=useState({});\r\n\r\n    useEffect(() => {\r\n        \r\n        const states = dbdata.map((state) => ({\r\n            name: state.stateName,\r\n            value: state.stateID\r\n        }));\r\n        setRegions(states);\r\n        setRegion(\"KA\");\r\n        \r\n        const reg = dbdata.find(reg => reg.stateID === \"KA\");\r\n        setRegionInfo(reg);\r\n\r\n        \r\n        setJob(\"1\");\r\n        const jb = reg.stateData.find(jb => jb.jobID === \"1\");\r\n        \r\n        const jobs = reg.stateData.map((job) => ({\r\n            name: job.Designation,\r\n            value: job.jobID\r\n        }));\r\n        setJobs(jobs);\r\n        setJobInfo(jb);\r\n        \r\n        }, []); \r\n\r\n    const onRegionChange = async (event) => {\r\n            const stateID = event.target.value;\r\n            setRegion(stateID);\r\n\r\n            const reg = dbdata.find(reg => reg.stateID === stateID);\r\n            console.log(stateID,reg);\r\n            \r\n            setRegionInfo(reg);\r\n\r\n\r\n            const jb = regionInfo.stateData.find(jb => jb.jobID === job);\r\n            console.log(jb);\r\n            setJobInfo(jb);\r\n            \r\n\r\n\r\n    }\r\n    const onJobChange = async (event) => {\r\n      const jobID = event.target.value;\r\n      setJob(jobID);\r\n\r\n      const jb = regionInfo.stateData.find(jb => jb.jobID === jobID);\r\n      setJobInfo(jb);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1></h1>\r\n            <FormControl className=\"selectRegion\" >\r\n                <InputLabel id=\"regionSelect\">State</InputLabel>\r\n                <Select onChange={onRegionChange} value={region} >\r\n                  {\r\n                    regions.map(region => (\r\n                      <MenuItem value={region.value}>{region.name}</MenuItem>\r\n                    ))\r\n                  }\r\n                </Select>\r\n            </FormControl>\r\n                <hr/>\r\n            <FormControl className=\"selectJob\" >\r\n                <InputLabel id=\"jobSelect\">Job</InputLabel>\r\n                <Select onChange={onJobChange} value={job} >\r\n                  {\r\n                    jobs.map(job => (\r\n                      <MenuItem value={job.value}>{job.name}</MenuItem>\r\n                    ))\r\n                  }\r\n                </Select>\r\n            </FormControl>\r\n            <hr/>\r\n\r\n            <h1>Minimum Wage per Month : {parseFloat(jobInfo.minWage).toFixed(2)} </h1>\r\n            <h1>Minimum Wage per Day : {parseFloat(jobInfo.minWage/30).toFixed(2)} </h1>\r\n            <hr/>\r\n            <h3>Employer Form: </h3>\r\n\r\n            <CommentForm resetFeedbackForm = {props.resetFeedbackForm} addForm = {props.addForm} />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Employer;","import React, { Component, useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport {  Stagger } from 'react-animation-components';\r\nimport { Card, CardTitle, CardBody} from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\nimport dbdata from './data';\r\nimport { \r\n    MenuItem,\r\n    FormControl,\r\n    Select,\r\n    InputLabel,\r\n  } from '@material-ui/core';\r\n\r\n\r\nfunction RenderContractor({item}){\r\n    return(\r\n        <div className=\"col-md-12 mt-5\">\r\n            <Card>\r\n                 <CardBody className=\"ml-5\">\r\n                    <CardTitle>Name : {item.name}</CardTitle>\r\n                    <p>Phone Number : {item.telnum}</p>\r\n                    <p>Price offered : {item.price}</p>\r\n                    <p>Job and State required : {item.description}</p>\r\n                 </CardBody>\r\n            </Card>  \r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction Worker(props) {\r\n    const contractors = props.contractors.map((contractor) => {\r\n        return (\r\n            <div className = \"col-12 col-md-12 m-1\">\r\n                <Stagger in>\r\n                <RenderContractor item = {contractor} />\r\n                </Stagger>\r\n            </div>\r\n        );\r\n    });\r\n\r\n\r\n    const [job, setJob] = useState('');\r\n    const [jobs, setJobs] = useState([]);\r\n    const [jobInfo, setJobInfo] = useState({});\r\n    const [region, setRegion] = useState('KA');\r\n    \r\n\r\n    const [regions, setRegions]=useState([]);\r\n    const [regionInfo, setRegionInfo]=useState({});\r\n\r\n    useEffect(() => {\r\n        \r\n        const states = dbdata.map((state) => ({\r\n            name: state.stateName,\r\n            value: state.stateID\r\n        }));\r\n        setRegions(states);\r\n        setRegion(\"KA\");\r\n        \r\n        const reg = dbdata.find(reg => reg.stateID === \"KA\");\r\n        setRegionInfo(reg);\r\n\r\n        \r\n        setJob(\"1\");\r\n        const jb = reg.stateData.find(jb => jb.jobID === \"1\");\r\n        \r\n        const jobs = reg.stateData.map((job) => ({\r\n            name: job.Designation,\r\n            value: job.jobID\r\n        }));\r\n        setJobs(jobs);\r\n        setJobInfo(jb);\r\n        \r\n        }, []); \r\n\r\n    const onRegionChange = async (event) => {\r\n            const stateID = event.target.value;\r\n            setRegion(stateID);\r\n\r\n            const reg = dbdata.find(reg => reg.stateID === stateID);\r\n            console.log(stateID,reg);\r\n            \r\n            setRegionInfo(reg);\r\n\r\n\r\n            const jb = regionInfo.stateData.find(jb => jb.jobID === job);\r\n            console.log(jb);\r\n            setJobInfo(jb);\r\n            \r\n\r\n\r\n    }\r\n    const onJobChange = async (event) => {\r\n      const jobID = event.target.value;\r\n      setJob(jobID);\r\n\r\n      const jb = regionInfo.stateData.find(jb => jb.jobID === jobID);\r\n      setJobInfo(jb);\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1></h1>\r\n            <FormControl className=\"selectRegion\" >\r\n                <InputLabel id=\"regionSelect\">State</InputLabel>\r\n                <Select onChange={onRegionChange} value={region} >\r\n                  {\r\n                    regions.map(region => (\r\n                      <MenuItem value={region.value}>{region.name}</MenuItem>\r\n                    ))\r\n                  }\r\n                </Select>\r\n            </FormControl>\r\n            <hr/>\r\n            <FormControl className=\"selectJob\" >\r\n                <InputLabel id=\"jobSelect\">Job</InputLabel>\r\n                <Select onChange={onJobChange} value={job} >\r\n                  {\r\n                    jobs.map(job => (\r\n                      <MenuItem value={job.value}>{job.name}</MenuItem>\r\n                    ))\r\n                  }\r\n                </Select>\r\n            </FormControl>\r\n            <hr/>\r\n\r\n            <h1>Minimum Wage per Month : {parseFloat(jobInfo.minWage).toFixed(2)} </h1>\r\n            <h1>Minimum Wage per Day : {parseFloat(jobInfo.minWage/30).toFixed(2)} </h1>\r\n\r\n            <div>\r\n            <hr/>\r\n                <h3>Available Employers: </h3>\r\n                {contractors}\r\n                <Card>\r\n                 <CardBody className=\"ml-5\">\r\n                    <CardTitle>Name : Suresh</CardTitle>\r\n                    <p>Phone Number : 9874563268</p>\r\n                    <p>Price offered : 980</p>\r\n                    <p>Job and State required : Carpenter, Karnataka</p>\r\n                 </CardBody>\r\n            </Card>   \r\n            </div>\r\n        </div>\r\n \r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Worker;\r\n","import React, { Component } from 'react';\r\nimport{NavLink} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <br />\r\n                <p margin = \"%10\">The pandemic caused by the coronavirus has caused massive disruption to the lives of many individuals. \r\n                    Almost 4.1 million people have lost their jobs due to the circumstances. \r\n                    It becomes obvious and imperative that a platform connecting the employer to the various unskilled labourers is necessary. \r\n                    But since we live in the age of data we would like to enable the unskilled workers to choose the appropriate employer and not be taken advantage of. \r\n                    Therefore we make all the available information transparent and show the prices for the given job in the state from different employers, but also the minimum wage for that job in that state.The following are the instructions to use the site.\r\n                <br/><br/>\r\nIf you are an worker go to the Worker tab and give State and Job.\r\n<br/><br/>\r\n<button>\r\n                                <NavLink className = \"nav-link\" to=\"/Worker\">\r\n                                    <span className = \"fa fa-home fa-lg\"></span>Worker\r\n                                </NavLink>\r\n                             </button>\r\n\r\n<br></br>\r\n<br/>\r\nIf you are an Employer go to Employer tab select state and job sector and submit form.\r\n<br/>\r\n</p>\r\n\r\n<button>\r\n                                <NavLink className = \"nav-link\" to=\"/Employer\">\r\n                                    <span className = \"fa fa-home fa-lg\"></span>Employer\r\n                                </NavLink>\r\n                             </button>\r\n\r\n<br></br>\r\n<br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport {Navbar, NavbarBrand,Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody, Label, Form, FormGroup, Input} from 'reactstrap';\r\nimport{NavLink} from 'react-router-dom';\r\n\r\nclass Header extends Component{\r\n\r\n    constructor(props){\r\n        super (props);\r\n        this.state = {\r\n            isNavOpen : false,\r\n            isModalOpen : false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState(\r\n            {\r\n                isNavOpen : !this.state.isNavOpen\r\n            });\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen : !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event){\r\n        this.toggleModal();\r\n        alert(\"Username: \"+this.username.value + \"Password: \"+this.password.value\r\n        + \"Remember: \" + this.remember.checked);\r\n        \r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className = 'container'>\r\n                    <NavbarToggler onClick = {this.toggleNav} />    \r\n                    <Collapse isOpen = {this.state.isNavOpen} navbar>\r\n                         <Nav navbar>\r\n                             <NavItem>\r\n                                <NavLink className = \"nav-link\" to=\"/home\">\r\n                                    <span className = \"fa fa-home fa-lg\"></span>Home\r\n                                </NavLink>\r\n                             </NavItem>\r\n                             <NavItem>\r\n                                <NavLink className = \"nav-link\" to=\"/employer\">\r\n                                    <span className = \"fa fa-info fa-lg\"></span>Employer\r\n                                </NavLink>\r\n                             </NavItem>\r\n                             <NavItem>\r\n                                <NavLink className = \"nav-link\" to=\"/worker\">\r\n                                    <span className = \"fa fa-list fa-lg\"></span>Worker\r\n                                </NavLink>\r\n                             </NavItem>\r\n                         </Nav>\r\n                         <Nav className = \"ml-auto\" navbar>\r\n                             \r\n                         </Nav>\r\n                         </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className='container'>\r\n                        <div className='row row-header'>\r\n                            <div className =\"col-12 col-sm-6\">\r\n                                 <h1>Nirbhar Jan</h1>\r\n                                 <p>Transparent and efficient website to connect employers to workers.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type = \"text\" id = \"username\" name=\"username\"\r\n                                innerRef = {(input) => this.username = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type = \"password\" id = \"password\" name=\"password\"\r\n                                innerRef = {(input) => this.password = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type = \"checkbox\" name=\"remember\"\r\n                                    innerRef = {(input) => this.remember = input}/>\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","export const ADD_FORM = 'ADD_FORM';\r\nexport const ADD_CONTRACTORS = 'ADD_CONTRACTORS';\r\nexport const CONTRACTORS_LOADING = 'CONTRACTORS_LOADING';\r\nexport const CONTRACTORS_FAILED = 'CONTRACTORS_FAILED';","export const baseUrl = 'https://ieeeuvce.s3.ap-south-1.amazonaws.com/db.json';\r\n","import * as ActionTypes from './ActionTypes';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\n\r\nexport const addForm = (name, telnum, price, description) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n       name : name,\r\n        telnum : telnum,\r\n        price : price,\r\n        description : description\r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl , {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n      .then(response=>response.json())\r\n      .then(response=>alert(JSON.stringify(response)))\r\n     .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\n\r\n\r\nexport const contractorsLoading = () => ({\r\n  type: ActionTypes.CONTRACTORS_LOADING\r\n});\r\n\r\nexport const contractorsFailed = (errmess) => ({\r\n  type : ActionTypes.CONTRACTORS_FAILED,\r\n  payload : errmess\r\n})\r\n\r\nexport const addcontractors = (contractors) => ({\r\n  type : ActionTypes.ADD_CONTRACTORS,\r\n  payload : contractors\r\n})\r\n\r\nexport const fetchContractors = () => (dispatch) => {\r\n  return fetch(baseUrl)\r\n  .then(response => {\r\n      if(response.ok){\r\n          return response;\r\n      }\r\n      else {\r\n          var error = new Error('Error'+ response.status + ': '+ response.statusText)\r\n          error.response = response;\r\n          throw error;\r\n      }\r\n  },\r\n  error => {\r\n      var errmess =  new Error(error.message);\r\n      throw errmess;\r\n  })\r\n      .then(response => response.json())\r\n      .then(contractors => dispatch(addcontractors(contractors)))\r\n      .catch(error => dispatch(contractorsFailed(error.message)))\r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Switch, Route, Redirect, withRouter} from 'react-router-dom';\r\nimport Employer from './EmployerComponent';\r\nimport Worker from './WorkerComponent';\r\nimport Home from './HomeComponent';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {addForm, fetchContractors } from '../redux/ActionCreators';\r\nimport {actions} from 'react-redux-form';\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        contractors : state.contractors\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    resetFeedbackForm : () => {dispatch(actions.reset('feedback'))},\r\n    addForm: (Id, name, telnum, price, description) => dispatch(addForm(Id, name, telnum, price, description)),\r\n    fetchContractors: () => {dispatch(fetchContractors())}\r\n  });\r\n\r\nclass Main extends Component{\r\n    componentDidMount(){\r\n        this.props.fetchContractors();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch>\r\n                            <Route path=\"/home\" component={Home} />\r\n                            <Route exact path=\"/employer\" component={() => <Employer resetFeedbackForm={this.props.resetFeedbackForm} addForm = {this.props.addForm} />} />\r\n                            <Route exact path=\"/worker\" component={() => <Worker contractors = {this.props.contractors.contractors}\r\n                                                            isLoading = {this.props.contractors.isLoading}\r\n                                                           />} />\r\n                            <Redirect to=\"/home/\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","export const InitialFeedback = {\r\n    name : '',\r\n    telnum : '',\r\n    price: '',\r\n    description : ''\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Contractors = (state = {\r\n    isLoading : true,\r\n    errMess : null,\r\n    contractors : []\r\n}, action) => {\r\n    switch (action.type){\r\n        case ActionTypes.ADD_CONTRACTORS:\r\n            return {...state, isLoading : false, errMess: null, contractors : action.payload};\r\n\r\n        \r\n        case ActionTypes.CONTRACTORS_LOADING:\r\n            return {...state, isLoading : true, errMess: null, contractors: []};\r\n\r\n        case ActionTypes.CONTRACTORS_FAILED:\r\n            return {...state, isLoading : false, errMess: action.payload , contractors: []};\r\n\r\n        default : \r\n            return state;   \r\n    }\r\n}","import React, {Component} from 'react';\nimport Main from './components/MainComponent';\nimport {BrowserRouter} from 'react-router-dom';\nimport {ConfigureStore} from './redux/configureStore';\nimport {Provider} from 'react-redux';\n\nimport './App.css'\n\nconst store = ConfigureStore()\n\nclass App extends Component {\n\n  \n  render() {\n    return (\n      <Provider store = {store}>\n <BrowserRouter>\n       <div>\n          <Main />\n        </div>\n      </BrowserRouter>\n      </Provider>\n    );\n  }\n\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport {createForms} from 'react-redux-form';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\nimport {Contractors} from './contractors'\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            contractors : Contractors,\r\n            ...createForms({\r\n                feedback : InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}